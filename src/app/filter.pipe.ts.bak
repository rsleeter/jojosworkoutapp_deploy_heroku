import {Component,Input,Output,OnInit} from '@angular/core';
import {Pipe, PipeTransform} from '@angular/core';

@Pipe({
    name: 'filter'
})


@Injectable()
export class FilterPipe implements PipeTransform {
//    transform(items: any[], field: string, value: string): any[] {
//        if (!items) {
//            return [];
//        }
//        if (!field || !value) {
//            return items;
//        }
//
//        return items.filter(singleItem => singleItem[field].toLowerCase().includes(value.toLowerCase()));
//    }
//
//}
//
//export class FilterPipe implements PipeTransform {
  transform(items: any, filter: any, isAnd: bool): any {
    if (filter && Array.isArray(items)) {
      let filterKeys = Object.keys(filter);
      if (isAnd) {
        return items.filter(item =>
            filterKeys.reduce((memo, keyName) =>
                (memo && new RegExp(filter[keyName], 'gi').test(item[keyName])) || filter[keyName] === "", true));
      } else {
        return items.filter(item => {
          return filterKeys.some((keyName) => {
            console.log(keyName);
            return new RegExp(filter[keyName], 'gi').test(item[keyName]) || filter[keyName] === "";
          });
        });
      }
    } else {
      return items;
    }
  }
}
        
